#!/bin/bash -e

GAMEUSER="gameuser"
LOGFILE="/var/log/gameserver/install.log"
GAME_REPO_DIR="/root/gameservers"

function create_game_user {
    if ! getent passwd "$GAMEUSER" > /dev/null 2>&1; then
        useradd -m -s /bin/bash "$GAMEUSER"  
    fi
    
    . /etc/default/inithooks
    $INITHOOKS_PATH/bin/setpass.py $GAMEUSER --pass="$APP_PASS"
}

function clone_or_update_gameservers {
    if [ -d "$GAME_REPO_DIR" ]; then
        cd "$GAME_REPO_DIR"
        git pull
    else
        if [ -z "$GAME_REPO_URL" ]; then
            GAME_REPO_URL="https://github.com/jesinmat/linux-gameservers.git"
        fi
        if [ -n "$GAME_REPO_BRANCH" ]; then
            git clone --single-branch --branch "$GAME_REPO_BRANCH" "$GAME_REPO_URL" "$GAME_REPO_DIR"
        else
            git clone "$GAME_REPO_URL" "$GAME_REPO_DIR"
        fi
    fi
}

function select_game_interactive {
    python3 "/usr/local/bin/gameserver-menu.py" "$GAME_REPO_DIR"
}

function select_game_auto {
    cp "$GAME_REPO_DIR/games/$GAME/game_properties.sh" "/etc/gameserver/gameserver"
}

function select_game {
    if [ ! -d "/etc/gameserver" ] || [ ! -f "/etc/gameserver/gameserver" ]; then
        mkdir -p "/etc/gameserver"
        clone_or_update_gameservers 2>> "$LOGFILE"

        if [ -n "$GAME" ]; then
            select_game_auto
        else
            # Exit if not running interactively, game will be selected on first login
            [ -z "`stty size`" ] && exit 0
            select_game_interactive
        fi
        
        echo 'GameServer: $ipaddr' | cat - /etc/confconsole/services.txt > temp_confconsole
        mv temp_confconsole /etc/confconsole/services.txt
    fi
}

function install_game {
    if [ ! -f "/etc/gameserver/installation.done" ]; then
        . /etc/gameserver/gameserver

        cd "$GAME_REPO_DIR"
        chmod +x "auto_install.sh"
        bash "./auto_install.sh" -g "$GAME" -u "$GAMEUSER" -p "/home/$GAMEUSER/gameserver"
        
        touch "/etc/gameserver/installation.done"

        # Enable server start on boot
        systemctl enable gameserver
    fi
    systemctl start gameserver
}

function install {
    create_game_user
    select_game
    install_game 2>&1 | tee -a "$LOGFILE"
}

install
